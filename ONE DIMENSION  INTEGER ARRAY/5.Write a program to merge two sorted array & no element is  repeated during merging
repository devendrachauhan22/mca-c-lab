#include <stdio.h>

// Function to merge two sorted arrays without duplicates
void mergeArrays(int arr1[], int n1, int arr2[], int n2, int merged[]) {
    int i = 0, j = 0, k = 0;

    while (i < n1 && j < n2) {
        if (arr1[i] < arr2[j]) {
            if (k == 0 || merged[k - 1] != arr1[i]) {
                merged[k++] = arr1[i];
            }
            i++;
        } else if (arr1[i] > arr2[j]) {
            if (k == 0 || merged[k - 1] != arr2[j]) {
                merged[k++] = arr2[j];
            }
            j++;
        } else {
            if (k == 0 || merged[k - 1] != arr1[i]) {
                merged[k++] = arr1[i];
            }
            i++;
            j++;
        }
    }

    while (i < n1) {
        if (k == 0 || merged[k - 1] != arr1[i]) {
            merged[k++] = arr1[i];
        }
        i++;
    }

    while (j < n2) {
        if (k == 0 || merged[k - 1] != arr2[j]) {
            merged[k++] = arr2[j];
        }
        j++;
    }
}

int main() {
    int n1, n2;

    // Input the number of elements in the first array
    printf("Enter the number of elements in the first array: ");
    scanf("%d", &n1);
    int arr1[n1];

    // Input the elements of the first array
    printf("Enter the elements of the first array in sorted order:\n");
    for (int i = 0; i < n1; i++) {
        scanf("%d", &arr1[i]);
    }

    // Input the number of elements in the second array
    printf("Enter the number of elements in the second array: ");
    scanf("%d", &n2);
    int arr2[n2];

    // Input the elements of the second array
    printf("Enter the elements of the second array in sorted order:\n");
    for (int i = 0; i < n2; i++) {
        scanf("%d", &arr2[i]);
    }

    int merged[n1 + n2];

    // Merge the arrays
    mergeArrays(arr1, n1, arr2, n2, merged);

    // Output the merged array
    printf("Merged array without duplicates:\n");
    for (int i = 0; i < n1 + n2; i++) {
        if (i == 0 || merged[i] != merged[i - 1]) {
            printf("%d ", merged[i]);
        }
    }
    printf("\n");

    return 0;
}
